/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AirWatch-Structs.h"
#import <UIKit/UIView.h>

@class UILabel, UIColor, UIPinchGestureRecognizer, AVCaptureSession, AVCaptureDevice, CALayer, ZBarImageScanner, ZBarCaptureReader;
@protocol ZBarReaderViewDelegate;

@interface ZBarReaderView : UIView {
	id<ZBarReaderViewDelegate> readerDelegate;
	ZBarCaptureReader* captureReader;
	CGRect scanCrop;
	CGRect effectiveCrop;
	CGAffineTransform previewTransform;
	float zoom;
	float zoom0;
	float maxZoom;
	UIColor* trackingColor;
	BOOL tracksSymbols;
	BOOL showsFPS;
	int torchMode;
	int interfaceOrientation;
	double animationDuration;
	CALayer* preview;
	CALayer* overlay;
	CALayer* tracking;
	CALayer* cropLayer;
	UIView* fpsView;
	UILabel* fpsLabel;
	UIPinchGestureRecognizer* pinch;
	float imageScale;
	CGSize imageSize;
	BOOL started;
	BOOL running;
}
@property(assign, nonatomic) id<ZBarReaderViewDelegate> readerDelegate;
@property(assign, nonatomic) BOOL tracksSymbols;
@property(retain, nonatomic) UIColor* trackingColor;
@property(assign, nonatomic) int torchMode;
@property(assign, nonatomic) BOOL showsFPS;
@property(assign, nonatomic) float zoom;
@property(assign, nonatomic) float maxZoom;
@property(assign, nonatomic) CGRect scanCrop;
@property(assign, nonatomic) CGAffineTransform previewTransform;
@property(readonly, assign, nonatomic) ZBarCaptureReader* captureReader;
@property(readonly, assign, nonatomic) ZBarImageScanner* scanner;
@property(assign, nonatomic) BOOL allowsPinchZoom;
@property(assign, nonatomic) BOOL enableCache;
@property(retain, nonatomic) AVCaptureDevice* device;
@property(readonly, assign, nonatomic) AVCaptureSession* session;
+(id)alloc;
-(void)initSubviews;
-(void)_initWithImageScanner:(id)imageScanner;
-(id)initWithImageScanner:(id)imageScanner;
-(id)init;
-(id)initWithCoder:(id)coder;
-(void)dealloc;
-(void)resetTracking;
-(void)updateCrop;
-(void)layoutSubviews;
-(void)setImageSize:(CGSize)size;
-(void)willRotateToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)setZoom:(float)zoom animated:(BOOL)animated;
-(void)start;
-(void)stop;
-(void)flushCache;
-(void)handlePinch;
-(void)updateTracking:(id)tracking withSymbol:(id)symbol;
-(void)didTrackSymbols:(id)symbols;
@end

