/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UIImagePickerControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import <UIKit/UIImagePickerController.h>
#import "AirWatch-Structs.h"

@class CALayer, UIButton, ZBarHelpController, UIView, ZBarSymbol, ZBarImageScanner, UIBarButtonItem, UIToolbar;
@protocol ZBarReaderDelegate;

@interface ZBarReaderController : UIImagePickerController <UINavigationControllerDelegate, UIImagePickerControllerDelegate> {
	ZBarImageScanner* scanner;
	ZBarHelpController* help;
	UIView* overlay;
	UIView* boxView;
	CALayer* boxLayer;
	UIToolbar* toolbar;
	UIBarButtonItem* cancelBtn;
	UIBarButtonItem* scanBtn;
	UIBarButtonItem* space[3];
	UIButton* infoBtn;
	id<ZBarReaderDelegate> readerDelegate;
	BOOL showsZBarControls;
	BOOL showsHelpOnFail;
	BOOL takesPicture;
	BOOL enableCache;
	int cameraMode;
	CGRect scanCrop;
	int maxScanDimension;
	BOOL hasOverlay;
	BOOL sampling;
	unsigned long long t_frame;
	double dt_frame;
	ZBarSymbol* symbol;
	BOOL tracksSymbols;
}
@property(readonly, assign, nonatomic) ZBarImageScanner* scanner;
@property(assign, nonatomic) id<ZBarReaderDelegate> readerDelegate;
@property(assign, nonatomic) int cameraMode;
@property(assign, nonatomic) CGRect scanCrop;
@property(assign, nonatomic) int maxScanDimension;
@property(assign, nonatomic) BOOL showsHelpOnFail;
@property(assign, nonatomic) BOOL takesPicture;
@property(assign, nonatomic) BOOL enableCache;
@property(assign, nonatomic) BOOL tracksSymbols;
@property(assign, nonatomic) BOOL showsZBarControls;
-(id)init;
-(void)initOverlay;
-(void)viewDidLoad;
-(void)cleanup;
-(void)viewDidUnload;
-(void)dealloc;
-(void)scan;
-(void)cancel;
-(void)reenable;
-(void)initScanning;
-(void)viewWillAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)setDelegate:(id)delegate;
-(int)scanImage:(CGImageRef)image withScaling:(float)scaling;
-(id)extractBestResult:(BOOL)result;
-(void)updateBox:(id)box imageSize:(CGSize)size;
-(void)scanSequence:(id)sequence;
-(void)showHelpWithReason:(id)reason;
-(void)info;
-(void)imagePickerController:(id)controller didFinishPickingMediaWithInfo:(id)info;
-(void)imagePickerControllerDidCancel:(id)imagePickerController;
-(void)helpControllerDidFinish:(id)helpController;
-(id)scanImage:(CGImageRef)image;
@end

