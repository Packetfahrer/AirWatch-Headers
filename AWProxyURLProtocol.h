/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AirWatch-Structs.h"
#import "AWProxyHTTPConnectionDelegate.h"
#import <Foundation/NSURLProtocol.h>

@class NSMutableData, NSURLAuthenticationChallenge, NSURLResponse, NSThread, NSCachedURLResponse, AWProxyHTTPConnection;

@interface AWProxyURLProtocol : NSURLProtocol <AWProxyHTTPConnectionDelegate> {
	BOOL _isGzipped;
	BOOL hasSignedRequest;
	BOOL _shouldSignRequest;
	NSThread* _clientThread;
	AWProxyHTTPConnection* _connection;
	NSURLAuthenticationChallenge* _pendingChallenge;
	NSCachedURLResponse* _cachedResponse;
	NSMutableData* _buffer;
	NSURLResponse* _response;
}
@property(retain, nonatomic) NSURLResponse* response;
@property(retain, nonatomic) NSMutableData* buffer;
@property(assign, nonatomic) BOOL shouldSignRequest;
@property(retain, nonatomic) NSCachedURLResponse* cachedResponse;
@property(retain) NSURLAuthenticationChallenge* pendingChallenge;
@property(retain, nonatomic) AWProxyHTTPConnection* connection;
@property(retain) NSThread* clientThread;
+(id)serverCertificateError:(id*)error;
+(id)newAuthorizedRequestFrom:(id)from detached:(BOOL)detached;
+(id)newAuthorizedRequestFrom:(id)from;
+(id)signPayload:(id)payload withPfxCert:(id)pfxCert password:(id)password detached:(BOOL)detached;
+(void)logError;
+(id)dataFromStream:(bio_st*)stream;
+(id)canonicalRequestForRequest:(id)request;
+(BOOL)canInitWithRequest:(id)request;
-(id)defaultHeaders;
-(id)newAuthorizedRequestFrom:(id)from;
-(void)HTTPConnection:(id)connection didFailWithError:(id)error;
-(void)HTTPConnectionDidFinishLoading:(id)httpconnection;
-(void)HTTPConnection:(id)connection didReceiveData:(id)data;
-(void)handleRedirectForResponse:(id)response;
-(void)handleProxyAuthRequiredForResponse:(id)response;
-(void)HTTPConnection:(id)connection didReceiveResponse:(id)response;
-(void)HTTPConnection:(id)connection didCancelAuthenticationChallenge:(id)challenge;
-(void)HTTPConnection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;
-(void)stopLoading;
-(void)startLoading;
-(id)initWithRequest:(id)request cachedResponse:(id)response client:(id)client;
-(void)dealloc;
@end

