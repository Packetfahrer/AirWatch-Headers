/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSObject.h>
#import "UIAlertViewDelegate.h"
#import "AWApplicationRegistrationDelegate.h"
#import "UIApplicationDelegate.h"
#import "UITabBarControllerDelegate.h"
#import "AWMessageViewNavBarDelegate.h"
#import "EmailAuthenticationDelegate.h"
#import "ActivationSuccessfulDelegate.h"
#import "AWSDKDelegate.h"
#import "AirWatch-Structs.h"
#import "AWSessionDelegate.h"

@class EmailAuthenticationViewController, AgentSecureChannelHandler, UIWindow, AWTabController, AWAgentConfigurationViewController, AWReachability, AWAPPCommAuthenticate, AWNavigationController, DataUpdaterViewController, NSInvocationOperation, AWController, AWSession;

__attribute__((visibility("hidden")))
@interface AgentAppDelegate : NSObject <AWApplicationRegistrationDelegate, UIAlertViewDelegate, UIApplicationDelegate, UITabBarControllerDelegate, AWMessageViewNavBarDelegate, EmailAuthenticationDelegate, ActivationSuccessfulDelegate, AWSDKDelegate, AWSessionDelegate> {
	AWReachability* _hostReach;
	DataUpdaterViewController* _updateViewController;
	AWNavigationController* _updateNavigationController;
	AWNavigationController* _serverEntryNavigationController;
	AWNavigationController* _agentConfigNavigationController;
	AWAgentConfigurationViewController* _agentConfigViewController;
	NSInvocationOperation* _appRequestOperation;
	NSInvocationOperation* _controllerOperation;
	NSInvocationOperation* _showTabBarOperation;
	AWAPPCommAuthenticate* _appComm;
	AWController* _controller;
	BOOL _isLocked;
	BOOL _isSetUpDone;
	BOOL _enrollmentContinueButton;
	AgentSecureChannelHandler* secureChannelHandler;
	BOOL _launchedFromUrl;
	BOOL _showPostEnrollment;
	BOOL _beaconIsTransmitting;
	BOOL _didShowTabBar;
	BOOL _showMessageView;
	BOOL _didStartBeacon;
	UIWindow* _window;
	AWNavigationController* _connectNavigationController;
	AWNavigationController* _supportNavigationController;
	AWNavigationController* _aboutNavigationController;
	AWNavigationController* _messageNavigationController;
	AWTabController* _tabBarController;
	AWNavigationController* _enrollmentNavigationController;
	EmailAuthenticationViewController* _emailAuthentication;
	AWSession* _session;
	id _tokenrequestHandler;
	AWSession* _hmacSession;
}
@property(retain, nonatomic) AWSession* hmacSession;
@property(copy, nonatomic) id tokenrequestHandler;
@property(assign, nonatomic) BOOL didStartBeacon;
@property(retain, nonatomic) AWSession* session;
@property(assign, nonatomic) BOOL showMessageView;
@property(assign, nonatomic) BOOL didShowTabBar;
@property(assign, nonatomic) BOOL beaconIsTransmitting;
@property(assign, nonatomic) BOOL showPostEnrollment;
@property(assign, nonatomic) BOOL launchedFromUrl;
@property(retain, nonatomic) EmailAuthenticationViewController* emailAuthentication;
@property(retain, nonatomic) AWNavigationController* enrollmentNavigationController;
@property(readonly, assign, nonatomic) AWNavigationController* messageNavigationController;
@property(readonly, assign, nonatomic) AWNavigationController* aboutNavigationController;
@property(readonly, assign, nonatomic) AWNavigationController* supportNavigationController;
@property(readonly, assign, nonatomic) AWNavigationController* connectNavigationController;
@property(retain, nonatomic) AWTabController* tabBarController;
@property(retain, nonatomic) UIWindow* window;
-(void)enrollmentCompleteContinue:(id)aContinue;
-(BOOL)stagingRequired;
-(void)applySSOPolicy;
-(void)wipe;
-(void)receivedProfiles:(id)profiles;
-(void)updateUserInformation:(id)information;
-(void)checkUpgradeWithCompletion:(id)completion;
-(void)initialCheckDoneWithError:(id)error;
-(void)unlock;
-(void)lock;
-(void)enrollmentComplete:(id)complete;
-(void)deviceCheckInCheckOut:(id)checkOut;
-(void)deviceStatusFetchedNotifcation:(id)notifcation;
-(void)agentSetUpDoneNotification:(id)notification;
-(id)getAirwatchUrl:(id)url;
-(void)AWSessionDidInvalidate:(id)awsession;
-(void)AWSession:(id)session failedToInvalidateTokenWithError:(id)error;
-(void)AWSession:(id)session didFailWithError:(id)error;
-(void)AWSession:(id)session didRecieveToken:(id)token;
-(void)requestHmacFromToken:(id)token withCompletionHandler:(id)completionHandler;
-(void)setBackgroundFetchInterval:(double)interval;
-(void)serverVersionChangedNotification:(id)notification;
-(void)sdkChangeNotifcation:(id)notifcation;
-(void)setUpFromDefaults;
-(unsigned)application:(id)application supportedInterfaceOrientationsForWindow:(id)window;
-(BOOL)registerTabBarOperation;
-(BOOL)registerControllerOperation;
-(BOOL)registerAppRequestURL:(id)url fromSourceApplication:(id)sourceApplication;
-(void)registerApplication:(id)application withIdentifier:(id)identifier completion:(id)completion;
-(BOOL)handleOpenURL:(id)url FromSourceApplication:(id)sourceApplication;
-(void)dispatchOperations;
-(void)checkShareDevice:(id)device;
-(void)checkForAgentOrShareDeviceSettings:(id)agentOrShareDeviceSettings;
-(void)setTitleImageViewForNavBar:(id)navBar;
-(void)alertCheckInNotification;
-(id)identifierForRequest:(id)request;
-(void)applicationDidBecomeActive:(id)application;
-(BOOL)tabBarController:(id)controller shouldSelectViewController:(id)controller2;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)dealloc;
-(void)emailAuthenticationDidSelectContinueButton:(id)emailAuthentication;
-(void)activationSuccessfuldidPressButton:(id)button;
-(void)handleOpenURL:(id)url query:(id)query;
-(void)application:(id)application didRegisterForRemoteNotificationsWithDeviceToken:(id)deviceToken;
-(void)application:(id)application didFailToRegisterForRemoteNotificationsWithError:(id)error;
-(void)transmittDataSample:(id)sample;
-(void)application:(id)application performFetchWithCompletionHandler:(id)completionHandler;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification fetchCompletionHandler:(id)handler;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification;
-(BOOL)application:(id)application openURL:(id)url sourceApplication:(id)application3 annotation:(id)annotation;
-(BOOL)application:(id)application handleOpenURL:(id)url;
-(void)applicationWillEnterForeground:(id)application;
-(void)application:(id)application didReceiveLocalNotification:(id)notification;
-(BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
-(id)init;
@end

