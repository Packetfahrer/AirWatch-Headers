/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSOperation.h>
#import "AWAuthenticationChallengeControllerDelegate.h"
#import "AWURLConnectionDelegate.h"

@class NSURLCredential, AWURLConnection, AWAuthenticationChallengeController, NSString, NSMutableData, NSData, NSError, AWEnrollmentAccount, NSSet, NSRecursiveLock, AWMutableURLRequest, NSURLResponse;

@interface AWURLConnectionOperation : NSOperation <AWAuthenticationChallengeControllerDelegate, AWURLConnectionDelegate> {
	BOOL _cancelled;
	BOOL _shouldFinishWithConnection;
	AWMutableURLRequest* _request;
	NSSet* _runLoopModes;
	NSError* _error;
	NSURLCredential* _credential;
	AWEnrollmentAccount* _authenticatedEnrollmentAccount;
	NSData* _encryptionKey;
	AWURLConnection* _connection;
	NSMutableData* _responseDataBuffer;
	int _state;
	NSRecursiveLock* _lock;
	NSURLResponse* _response;
	id _authenticationAgainstProtectionSpace;
	id _authenticationChallenge;
	AWAuthenticationChallengeController* _challengeController;
}
@property(assign, nonatomic) BOOL shouldFinishWithConnection;
@property(retain, nonatomic) AWAuthenticationChallengeController* challengeController;
@property(copy, nonatomic) id authenticationChallenge;
@property(copy, nonatomic) id authenticationAgainstProtectionSpace;
@property(assign, nonatomic) BOOL cancelled;
@property(readonly, assign, nonatomic) NSURLResponse* response;
@property(readonly, assign, nonatomic) NSRecursiveLock* lock;
@property(assign, nonatomic) int state;
@property(retain, nonatomic) NSMutableData* responseDataBuffer;
@property(retain, nonatomic) AWURLConnection* connection;
@property(retain, nonatomic) NSData* encryptionKey;
@property(retain, nonatomic) AWEnrollmentAccount* authenticatedEnrollmentAccount;
@property(retain, nonatomic) NSURLCredential* credential;
@property(readonly, assign, nonatomic) NSError* error;
@property(retain, nonatomic) NSSet* runLoopModes;
@property(readonly, assign, nonatomic) NSString* responseString;
@property(readonly, assign, nonatomic) NSData* responseData;
@property(retain, nonatomic) AWMutableURLRequest* request;
+(void)networkRequestThreadEntryPoint;
+(id)networkRequestThread;
-(void)terminateConnectionWithoutError;
-(BOOL)hasNonStandardAuthorizationHeader;
-(void)useCredential:(id)credential forCurrentChallenge:(id)currentChallenge;
-(void)authenticationChallengeController:(id)controller useAlternateAuthorizationForCredential:(id)credential challenge:(id)challenge;
-(void)authenticationChallengeController:(id)controller failedToAuthenticateChallenge:(id)authenticateChallenge;
-(id)basicAuthenticationForCurrentCredential;
-(void)addAuthenticationHeaderToCurrentRequest;
-(void)URLConnection:(id)connection didFailWithError:(id)error;
-(void)URLConnection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;
-(BOOL)URLConnection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;
-(void)URLConnection:(id)connection didReceiveResponse:(id)response;
-(void)URLConnectionDidFinishLoading:(id)urlconnection;
-(void)URLConnection:(id)connection didReceiveData:(id)data;
-(void)setAuthenticationChallengeBlock:(id)block;
-(void)setAuthenticationAgainstProtectionSpaceBlock:(id)block;
-(void)finish;
-(void)cancelConnection;
-(void)cancel;
-(void)operationDidStart;
-(void)start;
-(BOOL)isCancelled;
-(BOOL)isFinished;
-(BOOL)isExecuting;
-(BOOL)isReady;
-(BOOL)isConcurrent;
-(void)dealloc;
-(id)initWithRequest:(id)request;
@end

