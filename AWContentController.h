/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSObject.h>
#import "AWNetworkOperationDelegate.h"

@class NSData, AWEnrollmentAccount, NSOperationQueue, AWSession, NSMutableDictionary;
@protocol AWContentControllerDelegate;

@interface AWContentController : NSObject <AWNetworkOperationDelegate> {
	NSOperationQueue* _networkingOperationQueue;
	AWSession* contentSession;
	id _completionBlock;
	NSMutableDictionary* _dataHash;
	id _authenticationAgainstProtectionSpace;
	id _authenticationChallenge;
	id<AWContentControllerDelegate> _delegate;
	AWEnrollmentAccount* _authenticatedEnrollmentAccount;
	NSData* _encryptionKey;
}
@property(readonly, assign, nonatomic) NSMutableDictionary* dataHash;
@property(copy, nonatomic) id authenticationChallenge;
@property(copy, nonatomic) id authenticationAgainstProtectionSpace;
@property(retain, nonatomic) id<AWContentControllerDelegate> delegate;
@property(retain, nonatomic) NSData* encryptionKey;
@property(retain, nonatomic) AWEnrollmentAccount* authenticatedEnrollmentAccount;
-(BOOL)networkOperation:(id)operation shouldAuthenticateAgainstProtectionSpace:(id)space;
-(void)networkOperation:(id)operation didReceiveAuthenticationChallenge:(id)challenge;
-(void)networkOperationDidFinish:(id)networkOperation;
-(void)networkOperation:(id)operation receivedData:(id)data;
-(void)networkOperation:(id)operation didReceiveResponse:(id)response;
-(void)networkOperation:(id)operation failedWithError:(id)error;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)reachabilityDidChangeNotification:(id)reachability;
-(id)networkOperationForURL:(id)url method:(id)method;
-(id)requestOperationForURL:(id)url method:(id)method shouldAddCredential:(BOOL)credential;
-(id)serviceDataBuffer:(id)buffer;
-(BOOL)consoleIs65OrHigher;
-(BOOL)consoleIs64OrHigher;
-(id)contentRepositoryApiMainUrlText;
-(id)contentApiMainUrlTextForAccount:(id)account;
-(void)discardCheckOutOfEntity:(int)entity inRepository:(int)repository inFolder:(int)folder withCompletion:(id)completion;
-(void)checkOutContent:(int)content inRepository:(int)repository inFolder:(int)folder withCompletion:(id)completion;
-(void)deletePersonalFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)movePersonalFolder:(int)folder inRepository:(int)repository toFolder:(int)folder3 withCompletion:(id)completion;
-(void)renamePersonalFolder:(int)folder inRepository:(int)repository withName:(id)name withCompletion:(id)completion;
-(void)createPersonalFolder:(id)folder inRepository:(int)repository parentFolder:(int)folder3 withCompletion:(id)completion;
-(void)updateMetadataForPersonalContent:(int)personalContent inRepository:(int)repository inFolder:(int)folder withSubject:(id)subject description:(id)description notes:(id)notes withCompletion:(id)completion;
-(void)renamePersonalContent:(int)content inRepository:(int)repository name:(id)name withCompletion:(id)completion;
-(void)movePersonalContent:(int)content inRespository:(int)respository toFolder:(int)folder withCompletion:(id)completion;
-(void)deletePersonalContent:(int)content fromFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)revisionListForPersonalContent:(int)personalContent inFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)updatePersonalContent:(int)content contentData:(id)data toFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)uploadPersonalContent:(id)content contentData:(id)data toFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)fetchRepositoriesStorageQuotaInfo:(id)info;
-(void)fetchAvailableContentForFolder:(int)folder inRepository:(int)repository withCompletion:(id)completion;
-(void)fetchFulltreeForRepository:(int)repository withCompletion:(id)completion;
-(void)fetchFoldersForRepository:(int)repository forceSync:(BOOL)sync withCompletion:(id)completion;
-(void)fetchRepositoriesWithCompletion:(id)completion;
-(void)searchContent:(id)content searchQuery:(id)query resultStart:(int)start withCompletion:(id)completion;
-(void)searchContent:(id)content searchQuery:(id)query resultStart:(int)start;
-(void)fetchContent:(id)content withIdentifiers:(id)identifiers withCompletion:(id)completion;
-(void)fetchContent:(id)content withIdentifiers:(id)identifiers;
-(void)fetchAvailableContent:(id)content withCompletion:(id)completion;
-(void)fetchAvailableContent:(id)content;
-(void)downloadContentVersion:(id)version;
-(void)fetchForcedContent:(id)content withCompletion:(id)completion;
-(void)fetchForcedContent:(id)content;
-(void)updateContent:(id)content account:(id)account status:(int)status withCompletion:(id)completion;
-(void)updateContent:(id)content account:(id)account status:(int)status;
-(void)fetchCategories:(id)categories parentCategoryIdentifier:(int)identifier all:(BOOL)all withCompletion:(id)completion;
-(void)fetchCategories:(id)categories parentCategoryIdentifier:(int)identifier all:(BOOL)all;
-(void)fetchAllAvailableContent:(id)content parentCategoryIdentifier:(int)identifier withCompletion:(id)completion;
-(void)fetchAllAvailableContent:(id)content parentCategoryIdentifier:(int)identifier;
-(void)fetchCategoryTree:(id)tree withCompletion:(id)completion;
-(void)fetchCategoryTree:(id)tree;
-(void)fetchContentUpdate:(id)update withCompletion:(id)completion;
-(void)fetchContentUpdate:(id)update;
-(void)setAuthenticationChallengeBlock:(id)block;
-(void)setAuthenticationAgainstProtectionSpaceBlock:(id)block;
-(BOOL)canDeletePersonalFolder;
-(BOOL)canRenamePersonalFolder;
-(BOOL)canMovePersonalFolder;
-(BOOL)canCreatePersonalFolder;
-(BOOL)canCheckOutContent;
-(BOOL)canUpdatePersonalContentMetadata;
-(BOOL)canRenamePersonalContent;
-(BOOL)canMovePersonalContent;
-(BOOL)canDeletePersonalContent;
-(BOOL)canUploadPersonalContent;
-(void)removeAllRemoteOperation;
-(void)retrieveSEGKeyWithCompletion:(id)completion;
-(id)handle500Status:(int)status forResponse:(id)response operation:(id)operation;
-(id)handle400Status:(int)status forResponse:(id)response operation:(id)operation;
-(id)handleServerResponse:(id)response forOperation:(id)operation;
-(void)dealloc;
-(id)initWithSession:(id)session;
@end

